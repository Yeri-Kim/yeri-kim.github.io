{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/ts-declare/","webpackCompilationHash":"bba7c4862a862269a568","result":{"data":{"markdownRemark":{"id":"0fd1864d-aa33-5b68-a003-b568a0becc0f","html":"<p>이번에 공부할 내용은 <a href=\"https://www.typescriptlang.org/docs/handbook/variable-declarations.html\">TypeScript - 변수선언</a>이다.\n이 부분은 var와 ES6의 let/const의 명확한 차이, Scope, Closure, Hoisting, ES6의 Destructuring 개념을 잘 알고 있다면, JavaScript와 다를 것이 거의 없으므로 그냥 넘어가도 좋다.</p>\n<p>혹시 잘 모른다면 아래를 참고해서 충분히 공부하자.</p>\n<ul>\n<li><a href=\"https://exploringjs.com/es6/ch_variables.html\">exploringjs - 변수와 스콥</a></li>\n<li><a href=\"https://javascript.info/variables\">JavaScript.info - 변수</a></li>\n<li><a href=\"https://javascript.info/closure\">JavaScript.info - 클로저</a></li>\n<li><a href=\"https://exploringjs.com/es6/ch_destructuring.html\">exploringjs - destructuring</a></li>\n<li><a href=\"https://javascript.info/destructuring-assignment\">JavaScript.info - destructuring 과제들</a></li>\n</ul>\n<h4 id=\"let-선언과-block-scoping\"><a href=\"#let-%EC%84%A0%EC%96%B8%EA%B3%BC-block-scoping\" aria-label=\"let 선언과 block scoping permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>let 선언과 block scoping</h4>\n<p>JavaScript와 결과값이 다른 코드가 있어서 가져왔다.</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">function</span> <span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> a<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> a<span class=\"token punctuation\">;</span></code></pre></div>\n<p>let 키워드는 hoisting이 되지 않으므로 위의 코드가 .js 로 저장됐다면 runtime 시에 <code class=\"language-text\">Uncaught ReferenceError: Cannot access &#39;a&#39; before initialization</code> 에러가 뜬다.\n그러나 .ts로 저장하고 컴파일된 코드를 보면 <code class=\"language-text\">let a;</code>가 <code class=\"language-text\">var a;</code>로 되어있다. 그래서 위의 코드는 에러가 나지 않으며, <code class=\"language-text\">변수 a</code>가 hoisting 되어 <code class=\"language-text\">foo()</code>는 정상적으로 호출이 되고 <code class=\"language-text\">undefined</code>를 return한다.</p>","fields":{"slug":"/posts/ts-declare/","tagSlugs":["/tag/typescript/"]},"frontmatter":{"date":"2019-06-22T11:41:32.169Z","description":"TypeScript의 변수 선언에 대해 공부합니다. 이 부분은 var와 ES6의 let/const의 명확한 차이, Scope, Closure, Hoisting, ES6의 Destructuring 개념을 잘 알고 있다면, JavaScript와 다를 것이 거의 없으므로 그냥 넘어가도 좋습니다.","tags":["typescript"],"title":"TypeScript - 변수선언"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/ts-declare/"}}}