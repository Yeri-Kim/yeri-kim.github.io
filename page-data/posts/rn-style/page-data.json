{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/rn-style/","result":{"data":{"markdownRemark":{"id":"4da11949-adde-5b57-94f4-0b7673e67f26","html":"<p>React Native 공부를 시작하면서 느낀 불편함이 몇 개 있는데 첫 번째는 개발자도구의 Element, Network 탭 같은 것이 없다는 것이다.</p>\n<p>두 번째는 style 작성이 불편했다. 매번 component 파일에 StyleSheet을 생성해서 style을 적용하다 보니\n공통 style을 정의하거나 재사용하고 싶은 style을 관리하는 방법을 생각해봐야했다.\n그리고 여러 예제에 js와 css가 분리되지 않는 것도 유지보수에 썩 좋아보이지 않았다.</p>\n<p>챕터 5장이 끝나가다 보니 가닥이 좀 잡혔기에 내용을 조금 정리해보았다.</p>\n<h3 id=\"조건적인-스타일-사용하기\"><a href=\"#%EC%A1%B0%EA%B1%B4%EC%A0%81%EC%9D%B8-%EC%8A%A4%ED%83%80%EC%9D%BC-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0\" aria-label=\"조건적인 스타일 사용하기 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>조건적인 스타일 사용하기</h3>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">View</span></span> <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">[</span>styles<span class=\"token punctuation\">.</span>button<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>touching <span class=\"token operator\">&amp;&amp;</span> styles<span class=\"token punctuation\">.</span>highlight<span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span></code></pre></div>\n<p>리액트에서는 워낙 많이 사용하는 방식이라, React Native에서는 어떻게 여러 스타일을 적용하면서 조건도 줄 수 있을 까 고민했는데 위와 같이 하면 된다.</p>\n<ul>\n<li>React Native에서는 배열에서 오른쪽에 있는 객체에 지정된 속성이 우선순위가 더 높다.</li>\n<li>만약 부정 값(false, null, undefined)이 있을 경우 해당 속성은 무시된다.</li>\n</ul>\n<h3 id=\"스타일-객체-내보내기\"><a href=\"#%EC%8A%A4%ED%83%80%EC%9D%BC-%EA%B0%9D%EC%B2%B4-%EB%82%B4%EB%B3%B4%EB%82%B4%EA%B8%B0\" aria-label=\"스타일 객체 내보내기 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>스타일 객체 내보내기</h3>\n<p>아래와 같이 component 파일에 style을 빼서 파일을 분리하는 것이 좋다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">- Login\n  |- index.js\n  |- styles.js</code></pre></div>\n<p>styles.j는 아래와 같이</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> StyleSheet <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-native'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> styles <span class=\"token operator\">=</span> StyleSheet<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  text<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    color<span class=\"token punctuation\">:</span> <span class=\"token string\">'#FF00FF'</span><span class=\"token punctuation\">,</span>\n    fontSize<span class=\"token punctuation\">:</span> <span class=\"token number\">16</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> styles<span class=\"token punctuation\">;</span></code></pre></div>\n<p>index.js에서 다음과 같이 스타일을 불러온다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> styles <span class=\"token keyword\">from</span> <span class=\"token string\">'./styles'</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"스타일의-재사용과-공유\"><a href=\"#%EC%8A%A4%ED%83%80%EC%9D%BC%EC%9D%98-%EC%9E%AC%EC%82%AC%EC%9A%A9%EA%B3%BC-%EA%B3%B5%EC%9C%A0\" aria-label=\"스타일의 재사용과 공유 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>스타일의 재사용과 공유</h3>\n<p>컴포넌트와 스타일을 별도의 디렉터리로 구분하면 사용 목적에 따라 스타일 파일을 명확히 구분할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">- src\n  |- components\n    |- Button\n      |- index.js\n      |- styles.js\n  |- styles\n    |- styles.js\n    |- colors.js\n    |- fonts.js</code></pre></div>\n<h3 id=\"flexbox\"><a href=\"#flexbox\" aria-label=\"flexbox permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>flexbox</h3>\n<p>책에 내용이 부실하다. <a href=\"https://facebook.github.io/react-native/docs/flexbox\">React Native 공식문서 - Layout with Flexbox</a>를 보는 것이 더 낫다.</p>\n<h3 id=\"reference\"><a href=\"#reference\" aria-label=\"reference permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>reference</h3>\n<ul>\n<li>빠른 모바일 앱 개발을 위한 React Native</li>\n</ul>","fields":{"slug":"/posts/rn-style/","tagSlugs":["/tag/react-native/","/tag/css/"]},"frontmatter":{"date":"2019-07-12T13:42:32.169Z","description":null,"tags":["react-native","css"],"title":"[React Native] 5장 style"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/rn-style/"}}}