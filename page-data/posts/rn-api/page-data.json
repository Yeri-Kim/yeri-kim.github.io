{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/rn-api/","webpackCompilationHash":"3081c798a2f01a0d8e34","result":{"data":{"markdownRemark":{"id":"70952204-b17b-57df-94cb-bc40c73bc5e4","html":"<h2 id=\"6장-플랫폼-api\"><a href=\"#6%EC%9E%A5-%ED%94%8C%EB%9E%AB%ED%8F%BC-api\" aria-label=\"6장 플랫폼 api permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>6장 플랫폼 API</h2>\n<p>플랫폼 api란 스마트폰의 카메라롤, 위치, 영속되는 저장소 등을 접근할 수 있게 해주는 것이며,\n리액트 네이티브에는 재당된 모듈을 통해 사용하기 편리한 비동기 JavaScript 인터페이스로 제공된다.</p>\n<p>일부 API는 직접 모듈을 만들어서 써야 할 수도 있다.</p>\n<h3 id=\"61-지리적-위치-정보-이용하기\"><a href=\"#61-%EC%A7%80%EB%A6%AC%EC%A0%81-%EC%9C%84%EC%B9%98-%EC%A0%95%EB%B3%B4-%EC%9D%B4%EC%9A%A9%ED%95%98%EA%B8%B0\" aria-label=\"61 지리적 위치 정보 이용하기 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>6.1 지리적 위치 정보 이용하기</h3>\n<p>특별히 import할 모듈 없이 navigator를 사용하면 된다. getCurrentPosition은 success callback, error callback, goeOptions을 인자로 받는다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">//예제 코드</span>\nnavigator<span class=\"token punctuation\">.</span>geolocation<span class=\"token punctuation\">.</span><span class=\"token function\">getCurrentPosition</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">async</span> <span class=\"token parameter\">position</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> longitude<span class=\"token punctuation\">,</span> latitude <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> position<span class=\"token punctuation\">.</span>coords<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">const</span> res <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>api<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">/location?lon=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>longitude<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">&amp;lat=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>atitude<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">const</span> result <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> res<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n          storeList<span class=\"token punctuation\">:</span> result\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">(</span><span class=\"token parameter\">error</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> error<span class=\"token punctuation\">:</span> error<span class=\"token punctuation\">.</span>message <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">{</span> enableHighAccuracy<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> timeout<span class=\"token punctuation\">:</span> <span class=\"token number\">20000</span><span class=\"token punctuation\">,</span> maximumAge<span class=\"token punctuation\">:</span> <span class=\"token number\">1000</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>success callback으로 받는 position객체는 아래와 같이 들어온다.\n실제 위경도 정보를 받으려면 실물 폰으로 해야한다. simulator로는 제대로 된 값이 들어오지 않았다.</p>\n<p>simulator에서 가상으로 위경도를 바꾸려면 메뉴 -> Debug -> Location -> Custom Location 메뉴에서 다른 좌표를 입력하여 변경할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"coords\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"accuracy\"</span><span class=\"token operator\">:</span> <span class=\"token number\">65</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"altitude\"</span><span class=\"token operator\">:</span> <span class=\"token number\">51.0984992980957</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"altitudeAccuracy\"</span><span class=\"token operator\">:</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"heading\"</span><span class=\"token operator\">:</span> <span class=\"token number\">-1</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"latitude\"</span><span class=\"token operator\">:</span> <span class=\"token number\">37.50606253674235</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"longitude\"</span><span class=\"token operator\">:</span> <span class=\"token number\">127.0539114717741</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"speed\"</span><span class=\"token operator\">:</span> <span class=\"token number\">-1</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"timestamp\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1563422309308.258</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>책에 따르면</p>\n<blockquote>\n<p>앱 설정파일에 이 앱이 위치 정보에 접근할 필요가 있다는 것을 명시해야만 위치 정보 접근을 요청할 수 있다.\niOS의 경우 NSLocationWhenInUseUsageDescription 항목을 리액트 네이티브 앱 생성 시 기본으로 포함되는 Info.plist 파일에 추가해야 한다.\n안드로이드의 경우 AndroidManifest.xml 파일에 특정 코드를 추가해야 한다.</p>\n</blockquote>\n<p>라고 하는데, expo로 해서 그런지 아무 설정을 안 해도 정보 접근 alert상자가 잘 떴다.\n어쩌면 지금은 개발모드라서 될 수도 있고, 실제 배포 전에는 추가해야할 수도 있다. 알아봐야한다.</p>\n<h3 id=\"614-사용자-위치-지켜보기\"><a href=\"#614-%EC%82%AC%EC%9A%A9%EC%9E%90-%EC%9C%84%EC%B9%98-%EC%A7%80%EC%BC%9C%EB%B3%B4%EA%B8%B0\" aria-label=\"614 사용자 위치 지켜보기 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>6.1.4 사용자 위치 지켜보기</h3>\n<p>지속적으로 사용자의 위치를 추적하거나 최신 위치 정보를 유지하고자 할 때 사용한다고 한다.\n폰 들고 움직일 수가 없어 테스트해보지 못했다 ㅎㅎ 타다, 카택 등의 앱을 클론할 때 사용해볼 코드이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>watchID <span class=\"token operator\">=</span> navigator<span class=\"token punctuation\">.</span>geolocation<span class=\"token punctuation\">.</span><span class=\"token function\">watchPosition</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">position</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> position <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>컴포넌트가 unmount 될 때 clear 시켜줘야 한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">componentWillUnmount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  navigator<span class=\"token punctuation\">.</span>geolocation<span class=\"token punctuation\">.</span><span class=\"token function\">clearWatch</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>watchID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"62-사진과-카메라-접근\"><a href=\"#62-%EC%82%AC%EC%A7%84%EA%B3%BC-%EC%B9%B4%EB%A9%94%EB%9D%BC-%EC%A0%91%EA%B7%BC\" aria-label=\"62 사진과 카메라 접근 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>6.2 사진과 카메라 접근</h3>\n<p>책에 따르면, eject를 해야 카메라를 사용할 수 있다던데, expo(33.0.0)로 했을 때 문제 없이 잘 작동했다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//예제코드</span>\n CameraRoll<span class=\"token punctuation\">.</span><span class=\"token function\">getPhotos</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> first<span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> assetType<span class=\"token punctuation\">:</span> <span class=\"token string\">'Photos'</span><span class=\"token punctuation\">,</span> groupTypes<span class=\"token punctuation\">:</span> <span class=\"token string\">'All'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">setPhotoSource</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>uri<span class=\"token punctuation\">:</span> data<span class=\"token punctuation\">.</span>edges<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>node<span class=\"token punctuation\">.</span>image<span class=\"token punctuation\">.</span>uri<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token parameter\">error</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'error'</span><span class=\"token punctuation\">,</span> error<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>대신 assetType, groupTypes를 세팅하지 않으면 에러가 떠서 값을 추가로 주었다.\ngetPhotos의 parameter는 <a href=\"https://facebook.github.io/react-native/docs/cameraroll\">공식문서</a>에 더 자세히 나와있으니 여기서 보는게 낫겠다.</p>\n<h3 id=\"63-asyncstore\"><a href=\"#63-asyncstore\" aria-label=\"63 asyncstore permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>6.3 AsyncStore</h3>\n<p>React Native에서 제공하는 AsyncStorage는 key-value 형태로 데이터를 저장하며 이는 앱 내에서 어디서나 접근 가능하다.\n웹의 LocalStorage와 비슷하다.</p>\n<p>AsyncStorage에 저장할 때 사용하는 키는 모든 문자열을 포함할 수 있다. @앱이름:키 형태로 지정하는 것이 일반적이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">const STORAGE_KEY = &#39;@SmartWeather:zip&#39;;</code></pre></div>\n<p>AsyncStorage 모듈의 getItem, setItem 함수는 promise객체를 리턴한다. 다음과 같이 사용한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">AsyncStorage<span class=\"token punctuation\">.</span><span class=\"token function\">getItem</span><span class=\"token punctuation\">(</span><span class=\"token constant\">STORAGE_KEY</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">value</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">_getForecastForZip</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">err</span> <span class=\"token operator\">=></span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">.</span>messgae<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">done</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>","fields":{"slug":"/posts/rn-api/","tagSlugs":["/tag/react-native/","/tag/api/"]},"frontmatter":{"date":"2019-07-18T13:42:32.169Z","description":null,"tags":["react-native","api"],"title":"[React Native] 6장 플랫폼 API"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/rn-api/"}}}