{"version":3,"sources":["webpack:///./src/components/Post/Comments/Comments.js","webpack:///./src/components/Post/Content/Content.js","webpack:///./src/components/Post/Meta/Meta.js","webpack:///./src/components/Post/Post.js","webpack:///./src/templates/post-template.js","webpack:///./src/hooks/use-site-metadata.js","webpack:///./src/hooks/use-categories-list.js","webpack:///./src/hooks/use-tags-list.js","webpack:///./src/hooks/index.js","webpack:///./src/components/Layout/Layout.js","webpack:///./src/components/Layout/index.js","webpack:///./src/components/Post/Tags/Tags.js","webpack:///./src/components/Post/Tags/index.js","webpack:///./node_modules/react-disqus-comments/build/main.js","webpack:///./node_modules/react-disqus-comments/build/components/DisqusThread.js"],"names":["Comments","_ref","postTitle","postSlug","_useSiteMetadata","useSiteMetadata","url","disqusShortname","react_default","a","createElement","main_default","shortname","identifier","title","Content","body","className","styles","dangerouslySetInnerHTML","__html","Meta","date","moment","format","Post","post","html","_post$fields","fields","tagSlugs","slug","_post$frontmatter","frontmatter","tags","gatsby_browser_entry","to","Post_Content_Content","Post_Meta_Meta","Tags","Post_Comments_Comments","__webpack_require__","d","__webpack_exports__","query","PostTemplate","data","siteTitle","siteSubtitle","subtitle","_data$markdownRemark$","markdownRemark","postDescription","description","metaDescription","Layout","components_Post_Post","_84769549","site","siteMetadata","useCategoriesList","_3964968768","allMarkdownRemark","group","useTagsList","_4175916191","use_site_metadata","use_categories_list","use_tags_list","children","layout","Helmet_default","lang","name","content","property","components_Layout_Layout","inSidebar","map","i","cx","key","Post_Tags_Tags","module","exports","Object","defineProperty","value","_extends","assign","target","arguments","length","source","prototype","hasOwnProperty","call","_createClass","defineProperties","props","descriptor","enumerable","configurable","writable","Constructor","protoProps","staticProps","_react2","_interopRequireDefault","_propTypes2","obj","__esModule","default","DISQUS_CONFIG","__disqusAdded","copyProps","context","onNewComment","language","rest","keys","indexOf","_objectWithoutProperties","prop","page","callbacks","DisqusThread","_React$Component","instance","TypeError","_classCallCheck","this","self","ReferenceError","_possibleConstructorReturn","__proto__","getPrototypeOf","apply","subClass","superClass","create","constructor","setPrototypeOf","_inherits","Component","loadDisqus","nextProps","nextState","_this2","reduce","memo","some","config","_defineProperty","id","child","disqus","document","parent","getElementsByTagName","async","type","src","appendChild","_this3","forEach","DISQUS","reset","reload","replace","window","disqus_config","addDisqusScript","displayName","propTypes","string","isRequired","category_id","func","defaultProps","location","href"],"mappings":"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","file":"component---src-templates-post-template-js-6d2f68291bb1d253224d.js","sourcesContent":["// @flow\nimport React from 'react';\nimport ReactDisqusComments from 'react-disqus-comments';\nimport { useSiteMetadata } from '../../../hooks';\n\ntype Props = {\n  postTitle: string,\n  postSlug: string\n};\n\nconst Comments = ({ postTitle, postSlug }: Props) => {\n  const { url, disqusShortname } = useSiteMetadata();\n\n  if (!disqusShortname) {\n    return null;\n  }\n\n  return (\n    <ReactDisqusComments\n      shortname={disqusShortname}\n      identifier={postTitle}\n      title={postTitle}\n      url={url + postSlug}\n    />\n  );\n};\n\nexport default Comments;\n","// @flow\nimport React from 'react';\nimport styles from './Content.module.scss';\n\ntype Props = {\n  body: string,\n  title: string\n};\n\nconst Content = ({ body, title }: Props) => (\n  <div className={styles['content']}>\n    <h1 className={styles['content__title']}>{title}</h1>\n    <div className={styles['content__body']} dangerouslySetInnerHTML={{ __html: body }} />\n  </div>\n);\n\nexport default Content;\n","// @flow\nimport React from 'react';\nimport moment from 'moment';\nimport styles from './Meta.module.scss';\n\ntype Props = {\n  date: string\n};\n\nconst Meta = ({ date }: Props) => (\n  <div className={styles['meta']}>\n    <p className={styles['meta__date']}>Published {moment(date).format('D MMM YYYY')}</p>\n  </div>\n);\n\nexport default Meta;\n","// @flow\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport Comments from './Comments';\nimport Content from './Content';\nimport Meta from './Meta';\nimport Tags from './Tags';\nimport styles from './Post.module.scss';\nimport type { Node } from '../../types';\n\ntype Props = {\n  post: Node\n};\n\nconst Post = ({ post }: Props) => {\n  const { html } = post;\n  const { tagSlugs, slug } = post.fields;\n  const { tags, title, date } = post.frontmatter;\n\n  return (\n    <div className={styles['post']}>\n      <Link className={styles['post__home-button']} to=\"/\">All Articles</Link>\n\n      <div className={styles['post__content']}>\n        <Content body={html} title={title} />\n      </div>\n\n      <div className={styles['post__footer']}>\n        <Meta date={date} />\n        {tags && tagSlugs && <Tags tags={tags} tagSlugs={tagSlugs} />}\n      </div>\n\n      <div className={styles['post__comments']}>\n        <Comments postSlug={slug} postTitle={post.frontmatter.title} />\n      </div>\n    </div>\n  );\n};\n\nexport default Post;\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport Layout from '../components/Layout';\nimport Post from '../components/Post';\nimport { useSiteMetadata } from '../hooks';\nimport type { MarkdownRemark } from '../types';\n\ntype Props = {\n  data: MarkdownRemark\n};\n\nconst PostTemplate = ({ data }: Props) => {\n  const { title: siteTitle, subtitle: siteSubtitle } = useSiteMetadata();\n  const { title: postTitle, description: postDescription } = data.markdownRemark.frontmatter;\n  const metaDescription = postDescription !== null ? postDescription : siteSubtitle;\n\n  return (\n    <Layout title={`${postTitle} - ${siteTitle}`} description={metaDescription}>\n      <Post post={data.markdownRemark} />\n    </Layout>\n  );\n};\n\n\nexport const query = graphql`\n  query PostBySlug($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      html\n      fields {\n        slug\n        tagSlugs\n      }\n      frontmatter {\n        date\n        description\n        tags\n        title\n      }\n    }\n  }\n`;\n\n\nexport default PostTemplate;\n","// @flow\nimport { useStaticQuery, graphql } from 'gatsby';\n\nconst useSiteMetadata = () => {\n  const { site } = useStaticQuery(\n    graphql`\n      query SiteMetaData {\n        site {\n          siteMetadata {\n            author {\n              name\n              bio\n              photo\n              contacts {\n                email\n                github\n                linkedIn\n              }\n            }\n            menu {\n              label\n              path\n            }\n            url\n            title\n            subtitle\n            copyright\n            disqusShortname\n          }\n        }\n      }\n    `\n  );\n\n  return site.siteMetadata;\n};\n\nexport default useSiteMetadata;\n","// @flow\nimport { useStaticQuery, graphql } from 'gatsby';\n\nconst useCategoriesList = () => {\n  const { allMarkdownRemark } = useStaticQuery(\n    graphql`\n      query CategoriesListQuery {\n        allMarkdownRemark(\n          filter: { frontmatter: { template: { eq: \"post\" }, draft: { ne: true } } }\n        ) {\n          group(field: frontmatter___category) {\n            fieldValue\n            totalCount\n          }\n        }\n      }\n    `\n  );\n\n  return allMarkdownRemark.group;\n};\n\nexport default useCategoriesList;\n","// @flow\nimport { useStaticQuery, graphql } from 'gatsby';\n\nconst useTagsList = () => {\n  const { allMarkdownRemark } = useStaticQuery(\n    graphql`\n      query TagsListQuery {\n        allMarkdownRemark(\n          filter: { frontmatter: { template: { eq: \"post\" }, draft: { ne: true } } }\n        ) {\n          group(field: frontmatter___tags) {\n            fieldValue\n            totalCount\n          }\n        }\n      }\n    `\n  );\n\n  return allMarkdownRemark.group;\n};\n\nexport default useTagsList;\n","// @flow\nexport { default as useSiteMetadata } from './use-site-metadata';\nexport { default as useCategoriesList } from './use-categories-list';\nexport { default as useTagsList } from './use-tags-list';\nexport { default as useSearchList } from './use-search-list';\n","// @flow\nimport React from 'react';\nimport Helmet from 'react-helmet';\nimport type { Node as ReactNode } from 'react';\nimport styles from './Layout.module.scss';\n\ntype Props = {\n  children: ReactNode,\n  title: string,\n  description?: string\n};\n\nconst Layout = ({ children, title, description }: Props) => (\n  <div className={styles.layout}>\n    <Helmet>\n      <html lang=\"en\" />\n      <title>{title}</title>\n      <meta name=\"description\" content={description} />\n      <meta property=\"og:site_name\" content={title} />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:title\" content={title} />\n    </Helmet>\n    {children}\n  </div>\n);\n\nexport default Layout;\n","// @flow\nexport { default } from './Layout';\n","// @flow\nimport React from 'react';\nimport { Link } from 'gatsby';\nimport cx from 'classnames';\nimport styles from './Tags.module.scss';\n\ntype Props = {\n  tags: string[],\n  tagSlugs: string[],\n  inSidebar?: boolean\n};\n\nconst Tags = ({ tags, tagSlugs, inSidebar }: Props) => (\n  <div className={styles['tags']}>\n    <ul className={styles['tags__list']}>\n      {tagSlugs && tagSlugs.map((slug, i) => (\n        <li\n          className={cx(\n            styles['tags__list-item'],\n            inSidebar && styles['tags_insidebar__list-item']\n          )}\n          key={tags[i]}\n        >\n          <Link\n            to={slug}\n            className={cx(\n              styles['tags__list-item-link'],\n              inSidebar && styles['tags_insidebar__list-item-link']\n            )}\n          >\n            {tags[i]}\n          </Link>\n        </li>\n      ))}\n      {['wecode', '위코드', '코딩부트캠프', 'it학원', '코딩학원'].map((name) => (\n        <li\n          className={cx(\n            styles['tags__list-item'],\n            inSidebar && styles['tags_insidebar__list-item']\n          )}\n          key={name}\n        >\n          <span\n            className={cx(\n              styles['tags__list-item-link'],\n              inSidebar && styles['tags_insidebar__list-item-link']\n            )}\n          >\n            {name}\n          </span>\n        </li>\n      ))}\n    </ul>\n  </div>\n);\n\nexport default Tags;\n","// @flow\nexport { default } from './Tags';\n","'use strict';\n\nmodule.exports = require('./components/DisqusThread');","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nvar DISQUS_CONFIG = ['shortname', 'identifier', 'title', 'url', 'category_id', 'onNewComment', 'language'];\nvar __disqusAdded = false;\n\nfunction copyProps(context, props) {\n    var onNewComment = props.onNewComment,\n        language = props.language,\n        rest = _objectWithoutProperties(props, ['onNewComment', 'language']);\n\n    for (var prop in rest) {\n        context.page[prop] = rest[prop];\n    }\n\n    // Setting the language - if none is provided, the default one is used\n    context.language = language;\n\n    if (onNewComment) {\n        context.callbacks = {\n            onNewComment: [onNewComment]\n        };\n    }\n}\n\nvar DisqusThread = function (_React$Component) {\n    _inherits(DisqusThread, _React$Component);\n\n    function DisqusThread() {\n        _classCallCheck(this, DisqusThread);\n\n        return _possibleConstructorReturn(this, (DisqusThread.__proto__ || Object.getPrototypeOf(DisqusThread)).apply(this, arguments));\n    }\n\n    _createClass(DisqusThread, [{\n        key: 'componentDidMount',\n        value: function componentDidMount() {\n            this.loadDisqus();\n        }\n    }, {\n        key: 'componentDidUpdate',\n        value: function componentDidUpdate() {\n            this.loadDisqus();\n        }\n    }, {\n        key: 'shouldComponentUpdate',\n        value: function shouldComponentUpdate(nextProps, nextState) {\n            return nextProps.identifier !== this.props.identifier;\n        }\n    }, {\n        key: 'render',\n        value: function render() {\n            var _this2 = this;\n\n            var props = Object.keys(this.props).reduce(function (memo, key) {\n                return DISQUS_CONFIG.some(function (config) {\n                    return config === key;\n                }) ? memo : _extends({}, memo, _defineProperty({}, key, _this2.props[key]));\n            }, {});\n\n            return _react2.default.createElement(\n                'div',\n                props,\n                _react2.default.createElement('div', { id: 'disqus_thread' })\n            );\n        }\n    }, {\n        key: 'addDisqusScript',\n        value: function addDisqusScript() {\n            if (__disqusAdded) {\n                return;\n            }\n\n            var child = this.disqus = document.createElement('script');\n            var parent = document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0];\n\n            child.async = true;\n            child.type = 'text/javascript';\n            child.src = '//' + this.props.shortname + '.disqus.com/embed.js';\n\n            parent.appendChild(child);\n            __disqusAdded = true;\n        }\n    }, {\n        key: 'loadDisqus',\n        value: function loadDisqus() {\n            var _this3 = this;\n\n            var props = {};\n\n            // Extract Disqus props that were supplied to this component\n            DISQUS_CONFIG.forEach(function (prop) {\n                // prop \"shortname\" is only necessary for loading the script, not for the config itself\n                if (prop !== 'shortname' && !!_this3.props[prop]) {\n                    props[prop] = _this3.props[prop];\n                }\n            });\n\n            // If Disqus has already been added, reset it\n            if (typeof DISQUS !== 'undefined') {\n                DISQUS.reset({\n                    reload: true,\n                    config: function config() {\n                        copyProps(this, props);\n\n                        // Disqus needs hashbang URL, see https://help.disqus.com/customer/portal/articles/472107\n                        this.page.url = this.page.url.replace(/#/, '') + '#!newthread';\n                    }\n                });\n            } else {\n                // Otherwise add Disqus to the page\n                window.disqus_config = function () {\n                    copyProps(this, props);\n                };\n                this.addDisqusScript();\n            }\n        }\n    }]);\n\n    return DisqusThread;\n}(_react2.default.Component);\n\nDisqusThread.displayName = 'DisqusThread';\n\nDisqusThread.propTypes = {\n    id: _propTypes2.default.string,\n\n    /**\n     * `shortname` tells the Disqus service your forum's shortname,\n     * which is the unique identifier for your website as registered\n     * on Disqus. If undefined , the Disqus embed will not load.\n     */\n    shortname: _propTypes2.default.string.isRequired,\n\n    /**\n     * `identifier` tells the Disqus service how to identify the\n     * current page. When the Disqus embed is loaded, the identifier\n     * is used to look up the correct thread. If disqus_identifier\n     * is undefined, the page's URL will be used. The URL can be\n     * unreliable, such as when renaming an article slug or changing\n     * domains, so we recommend using your own unique way of\n     * identifying a thread.\n     */\n    identifier: _propTypes2.default.string,\n\n    /**\n     * `title` tells the Disqus service the title of the current page.\n     * This is used when creating the thread on Disqus for the first time.\n     * If undefined, Disqus will use the <title> attribute of the page.\n     * If that attribute could not be used, Disqus will use the URL of the page.\n     */\n    title: _propTypes2.default.string,\n\n    /**\n     * `url` tells the Disqus service the URL of the current page.\n     * If undefined, Disqus will take the window.location.href.\n     * This URL is used to look up or create a thread if disqus_identifier\n     * is undefined. In addition, this URL is always saved when a thread is\n     * being created so that Disqus knows what page a thread belongs to.\n     */\n    url: _propTypes2.default.string,\n\n    /**\n     * `category_id` tells the Disqus service the category to be used for\n     * the current page. This is used when creating the thread on Disqus\n     * for the first time.\n     */\n    category_id: _propTypes2.default.string,\n\n    /**\n     * `onNewComment` function accepts one parameter `comment` which is a\n     * JavaScript object with comment `id` and `text`. This allows you to track\n     * user comments and replies and run a script after a comment is posted.\n     */\n    onNewComment: _propTypes2.default.func,\n\n    /**\n     * `language` tells the Disqus service which language should be used.\n     * Please refer to https://www.transifex.com/disqus/disqus/ on which languages can be used\n     * If undefined, English is used as default one\n     */\n    language: _propTypes2.default.string\n};\n\nDisqusThread.defaultProps = {\n    url: typeof window === 'undefined' ? null : window.location.href\n};\n\nexports.default = DisqusThread;"],"sourceRoot":""}